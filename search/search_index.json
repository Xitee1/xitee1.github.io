{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>Welcome to my new documentation page!</p> <p>This is my new home page where I will publish all my documentations that I've written while trying out some things. Expect many articles about everything computer related soon!</p> <p>Please note that english is not my primary language, so expect some grammar issues here and there. You are welcome to open an issue in the repo about no matter how small mistake you encounter, or even better, open a pull request. This will also help me to improve my english skills </p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2023/12/31/test-blog-1/","title":"Test blog 1","text":""},{"location":"docs/mkdocs-syntax-examples/","title":"MKDocs Syntax Examples","text":""},{"location":"docs/mkdocs-syntax-examples/#syntax-testing","title":"Syntax testing","text":"test.yaml<pre><code>a:\n  aa: \"aa\"\n  ab: \"ab\"\nb:\n  ba: \"ba\"\n  bb: \"bb\"\n</code></pre> PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n</code></pre> <pre><code>console.log(\"Hello world\")\n</code></pre> <p>Note</p> <p>This is a simple note.</p> <p>Warning</p> <p>This is a warning!</p> <p>Danger!</p> <p>This is dangerous!</p> Collapsible <p>This is an important text!</p>"},{"location":"docs/android/sideload-an-android-app-and-spoofing-the-installer/","title":"Sideload an Android App and spoofing the installer","text":"<p>When installing an Android app, the system keeps track of where it came from. For example, if you install an app from the Google Play Store, the app info will show something like \"Installed from Google Play Store\". Normally, it doesn't matter where the app came from, but in some cases like Android Auto, it does.</p> <p>Android Auto does not show apps that were installed from sources other than Google Play. This prevents you from using modded apps in AA (e.g. Spotify,...).</p> <p>You can enable developer mode in AA, but in my case, the apps from different sources do not always show up and I have to reconnect AA in hopes it will be there on the next try. With spoofing the installed app, it is way more consistent (however it's still missing sometimes) and you don't need to enable the developer mode.</p> <p>To do this, you just need to use the <code>-i</code> argument and define the package name of the installer app: <pre><code>adb install -i \"com.android.vending\" -r .\\path\\to\\your.apk\n</code></pre></p>"},{"location":"docs/media/video-encoding/benchmark-with-ffmpeg/","title":"Benchmark with ffmpeg","text":"<p>This simple test lets you compare how fast your machine is at encoding videos.</p> <p>Just use a sample video like this one: <code>wget https://filesamples.com/samples/video/mkv/sample_1280x720_surfing_with_audio.mkv</code></p> <p>And start ffmpeg: <code>ffmpeg -i sample_1280x720_surfing_with_audio.mkv -c:v libx265 -preset medium -crf 20 -an -f null -</code></p> <p>Sample output: <code>encoded 4389 frames in 163.39s (26.86 fps), 3440.14 kb/s, Avg QP:23.81</code></p>"},{"location":"docs/networking/problems/issues-with-specific-wifi-network-only-working-few-seconds/","title":"Specific (Wi-Fi) Network works for few seconds, breaks, then works again for few seconds","text":""},{"location":"docs/networking/problems/issues-with-specific-wifi-network-only-working-few-seconds/#story","title":"Story","text":"<p>So I had really weird network problems on one specific Wi-Fi network on my laptop running Kubuntu.</p> <p>The problem was that the network worked a few seconds after connecting, then stopped working for a few seconds and then come back for a few seconds, over and over again. Sometimes it would not recover though. Even using ping, the responses were interrupted, so a DNS or firewall problems seemed unlikely. The connection status was still connected. Because the network requires PEAP authentication, I thought that this would be the problem (especially because it worked on all other devices I had).</p> <p>But after trying all kinds of things, thinking it the network would block something or an authentication issue, the problem was rather simple.</p> <p>Turns out, Docker, which was running on my laptop, was the problem because it was using the same network range (127.x.x.x).</p>"},{"location":"docs/networking/problems/issues-with-specific-wifi-network-only-working-few-seconds/#solution","title":"Solution","text":"<p>To verify that Docker was actually causing this issue, I have stopped it and deleted the network (will be recreated automatically when starting Docker again): <pre><code>sudo systemctl stop docker\nsudo ip link delete docker0\n</code></pre></p> <p>Directly after executing these commands, the network instantly worked flawlessly. To keep using Docker while on this network, we need to change the Docker subnet.</p> <p>Create/Modify this file and add this option: /etc/docker/daemon.json<pre><code>{\n  \"bip\": \"192.168.100.1/24\"\n}\n</code></pre></p> <p>Then restart Docker: <pre><code>sudo systemctl restart docker\n</code></pre></p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/","title":"iperf3: Network speed tests","text":"<p>iperf 3 is a useful tool that allows you to easily do (local) network speed tests between two computers.</p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#usage","title":"Usage","text":""},{"location":"docs/networking/tools/iperf3-network-speed-tests/#server","title":"Server","text":"<p><pre><code>iperf3 -s\n</code></pre> After executing this command, the server is started and no longer needs to be touched. All the test related options are used from the client side.</p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#client","title":"Client","text":"<p>To start a basic upload (client -&gt; server) speed test, type this command:  <pre><code>iperf3 -c x.x.x.x\n</code></pre> Replace <code>x.x.x.x</code> with the IP address of the server.</p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#options","title":"Options","text":"<p>You can add options to the client command to e.g. reverse the speed test (upload/download) or do a bidirectional speed test (upload and download at the same time).</p> <p>Here is a short list of the probably most used options:</p> Option Description <code>-R</code> Run in reverse mode (server sends, client receives) <code>--bidir</code> Run in bidirectional mode <code>-t 30</code> Time in seconds (e.g. 30s) to transmit for (default 10 secs) <p>To get the full list of options + descriptions, type: <pre><code>iperf3 --help\n</code></pre></p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#installation","title":"Installation","text":""},{"location":"docs/networking/tools/iperf3-network-speed-tests/#debianubuntu","title":"Debian/Ubuntu","text":"<pre><code>sudo apt install iperf3\n</code></pre>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#fedora-red-hat-centos-rocky","title":"Fedora / Red Hat / CentOS / Rocky","text":"<pre><code>yum install iperf3\n</code></pre>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#alpine-linux-often-used-for-docker-containers","title":"Alpine Linux (often used for docker containers)","text":"<pre><code>apk add iperf3\n</code></pre>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#freebsd","title":"FreeBSD","text":"<pre><code>sudo pkg install benchmarks/iperf3\n</code></pre>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#macos","title":"macOS","text":"<pre><code>brew install iperf3\n</code></pre>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#windows","title":"Windows","text":"<p>Download the latest version of iPerf3 from the official website: iPerf3 Download</p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#android","title":"Android","text":"<p>Useful networking app that also integrates iPerf 3: PingTools Network Utilities</p>"},{"location":"docs/networking/tools/iperf3-network-speed-tests/#run-as-service","title":"Run as service","text":"<p>To always let the server run without opening a terminal, you can create an iperf3 service that automatically gets started on boot.</p> <p>Create this file: /etc/systemd/system/iperf3.service<pre><code>[Unit]\nDescription=iperf3 server\nAfter=syslog.target network.target auditd.service\n\n[Service]\nExecStart=/usr/bin/iperf3 -s\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></p> <p>Reload systemctl (this is needed after creating/modifying systemd service files): <pre><code>systemctl daemon-reload\n</code></pre></p> <p>Start the iperf3 server: <pre><code>systemctl start iperf3\n</code></pre></p> <p>Enable it so that it automatically start back up on reboot: <pre><code>systemctl enable iperf3\n</code></pre></p> <p>Inspired by: https://askubuntu.com/questions/1251443/start-iperf3-deamon-at-startup</p>"},{"location":"blog/archive/2023/","title":"2023","text":""}]}